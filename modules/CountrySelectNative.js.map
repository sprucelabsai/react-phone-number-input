{"version":3,"sources":["../source/CountrySelectNative.js"],"names":["CountrySelectNative","onChange","event","props","value","target","undefined","name","options","onFocus","onBlur","disabled","tabIndex","className","SelectArrow","selectArrowComponent","selectedOption","option","divider","createElement","icon","map","label","propTypes","string","func","isRequired","arrayOf","shape","bool","number","element","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,mB;;;;;;;;;;;;;;8MA4CpBC,Q,GAAW,UAACC,KAAD,EACX;AAAA,OACSD,QADT,GACsB,MAAKE,KAD3B,CACSF,QADT;;AAEC,OAAMG,QAAQF,MAAMG,MAAN,CAAaD,KAA3B;AACAH,YAASG,UAAU,IAAV,GAAiBE,SAAjB,GAA6BF,KAAtC;AACA,G;;;;;2BAGD;AAAA,gBAaG,KAAKD,KAbR;AAAA,OAGEI,IAHF,UAGEA,IAHF;AAAA,OAIEH,KAJF,UAIEA,KAJF;AAAA,OAKEI,OALF,UAKEA,OALF;AAAA,OAMEC,OANF,UAMEA,OANF;AAAA,OAOEC,MAPF,UAOEA,MAPF;AAAA,OAQEC,QARF,UAQEA,QARF;AAAA,OASEC,QATF,UASEA,QATF;AAAA,OAUEC,SAVF,UAUEA,SAVF;AAAA,OAWyBC,WAXzB,UAWEC,oBAXF;;;AAeC,OAAIC,uBAAJ;AACA,wBAAqBR,OAArB,kHAA8B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,QAAnBS,MAAmB;;AAC7B,QAAI,CAACA,OAAOC,OAAR,IAAmBD,OAAOb,KAAP,KAAiBA,KAAxC,EAA+C;AAC9CY,sBAAiBC,MAAjB;AACA;AACD;;AAED,UACC;AAAA;AAAA,MAAK,WAAY,0BAAWJ,SAAX,EAAsB,2CAAtB,CAAjB;AACGG,sBAAkB,gBAAMG,aAAN,CAAoBH,eAAeI,IAAnC,EAA0C,EAAEhB,YAAF,EAA1C,CADrB;AAGC;AAAA;AAAA;AACC,YAAOG,IADR;AAEC,aAAQH,SAAS,IAFlB;AAGC,gBAAW,KAAKH,QAHjB;AAIC,eAAUQ,OAJX;AAKC,cAASC,MALV;AAMC,gBAAWC,QANZ;AAOC,gBAAWC,QAPZ;AAQC,oBAAa,KAAKT,KAAL,CAAW,YAAX,CARd;AASC,iBAAU,0CATX;AAUEK,aAAQa,GAAR,CAAY;AAAA,UAAGjB,KAAH,SAAGA,KAAH;AAAA,UAAUkB,KAAV,SAAUA,KAAV;AAAA,UAAiBJ,OAAjB,SAAiBA,OAAjB;AAAA,aACZ;AAAA;AAAA;AACC,aAAMA,UAAU,GAAV,GAAgBd,SAAS,IADhC;AAEC,eAAQc,UAAU,GAAV,GAAgBd,SAAS,IAFlC;AAGC,kBAAWc,UAAU,IAAV,GAAiB,KAH7B;AAIC,mBAAYA,UAAU,kDAAV,GAA+DZ,SAJ5E;AAKGgB;AALH,OADY;AAAA,MAAZ;AAVF,KAHD;AAwBC,kCAAC,WAAD;AAxBD,IADD;AA4BA;;;;4BApGMC,S,GACP;AACC;AACA;AACAnB,QAAQ,oBAAUoB,MAHnB;;AAKC;AACAvB,WAAW,oBAAUwB,IAAV,CAAeC,UAN3B;;AAQC;AACAlB,UAAU,oBAAUmB,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AAC3CxB,SAAQ,oBAAUoB,MADyB;AAE3CF,SAAQ,oBAAUE,MAFyB;AAG3CN,WAAU,oBAAUW;AAHuB,EAAhB,CAAlB,EAINH,UAbL;;AAeC;AACAnB,OAAO,oBAAUiB,MAhBlB;;AAkBC;AACAb,WAAW,oBAAUkB,IAnBtB;;AAqBC;AACAjB,WAAW,oBAAUkB,MAtBtB;;AAwBC;AACAf,uBAAuB,oBAAUgB,OAAV,CAAkBL,UAzB1C;;AA2BC;AACA;AACAjB,UAAU,oBAAUgB,IA7BrB;;AA+BC;AACA;AACAf,SAAS,oBAAUe;AAjCpB,C,SAoCOO,Y,GACP;AACCjB,uBAAuB;AAAA,SAAM,uCAAK,WAAU,gDAAf,GAAN;AAAA;AADxB,C;kBAxCoBf,mB","file":"CountrySelectNative.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport default class CountrySelectNative extends Component\n{\n\tstatic propTypes =\n\t{\n\t\t// A two-letter country code.\n\t\t// E.g. \"US\", \"RU\", etc.\n\t\tvalue : PropTypes.string,\n\n\t\t// Updates the `value`.\n\t\tonChange : PropTypes.func.isRequired,\n\n\t\t// `<select/>` options.\n\t\toptions : PropTypes.arrayOf(PropTypes.shape({\n\t\t\tvalue : PropTypes.string,\n\t\t\tlabel : PropTypes.string,\n\t\t\tdivider : PropTypes.bool\n\t\t})).isRequired,\n\n\t\t// HTML `name` attribute.\n\t\tname : PropTypes.string,\n\n\t\t// HTML `disabled` attribute.\n\t\tdisabled : PropTypes.bool,\n\n\t\t// HTML `tabIndex` attribute.\n\t\ttabIndex : PropTypes.number,\n\n\t\t// Select arrow component.\n\t\tselectArrowComponent : PropTypes.element.isRequired,\n\n\t\t// Toggles the `--focus` CSS class.\n\t\t// https://github.com/catamphetamine/react-phone-number-input/issues/189\n\t\tonFocus : PropTypes.func,\n\n\t\t// Toggles the `--focus` CSS class.\n\t\t// https://github.com/catamphetamine/react-phone-number-input/issues/189\n\t\tonBlur : PropTypes.func\n\t}\n\n\tstatic defaultProps =\n\t{\n\t\tselectArrowComponent : () => <div className=\"react-phone-number-input__country-select-arrow\"/>\n\t}\n\n\tonChange = (event) =>\n\t{\n\t\tconst { onChange } = this.props\n\t\tconst value = event.target.value\n\t\tonChange(value === 'ZZ' ? undefined : value)\n\t}\n\n\trender()\n\t{\n\t\tconst\n\t\t{\n\t\t\tname,\n\t\t\tvalue,\n\t\t\toptions,\n\t\t\tonFocus,\n\t\t\tonBlur,\n\t\t\tdisabled,\n\t\t\ttabIndex,\n\t\t\tclassName,\n\t\t\tselectArrowComponent : SelectArrow\n\t\t}\n\t\t= this.props\n\n\t\tlet selectedOption\n\t\tfor (const option of options) {\n\t\t\tif (!option.divider && option.value === value) {\n\t\t\t\tselectedOption = option\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={ classNames(className, 'react-phone-number-input__country--native') }>\n\t\t\t\t{ selectedOption && React.createElement(selectedOption.icon, ({ value })) }\n\n\t\t\t\t<select\n\t\t\t\t\tname={ name }\n\t\t\t\t\tvalue={ value || 'ZZ' }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\tonBlur={ onBlur }\n\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\taria-label={ this.props['aria-label'] }\n\t\t\t\t\tclassName=\"react-phone-number-input__country-select\">\n\t\t\t\t\t{options.map(({ value, label, divider }) => (\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tkey={ divider ? '|' : value || 'ZZ' }\n\t\t\t\t\t\t\tvalue={ divider ? '|' : value || 'ZZ' }\n\t\t\t\t\t\t\tdisabled={ divider ? true : false }\n\t\t\t\t\t\t\tclassName={ divider ? 'react-phone-number-input__country-select-divider' : undefined }>\n\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\n\t\t\t\t<SelectArrow/>\n\t\t\t</div>\n\t\t)\n\t}\n}"]}