{"version":3,"sources":["../source/formatPhoneNumber.js"],"names":["formatPhoneNumber","formatPhoneNumberIntl","value","format","metadata","phoneNumber"],"mappings":";;;;;;;;kBAUwBA,iB;QA2BRC,qB,GAAAA,qB;;AArChB;;AAEA;;;;;;;;AAQe,SAASD,iBAAT,CAA2BE,KAA3B,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AAClE,KAAI,CAACA,QAAL,EAAe;AACd,MAAI,QAAOD,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAC/BC,cAAWD,MAAX;AACAA,YAAS,UAAT;AACA;AACD;AACD,KAAI,CAACD,KAAL,EAAY;AACX,SAAO,EAAP;AACA;AACD,KAAMG,cAAc,sCAA2BH,KAA3B,EAAkCE,QAAlC,CAApB;AACA,KAAI,CAACC,WAAL,EAAkB;AACjB,SAAO,EAAP;AACA;AACD;AACA;AACA,SAAQF,MAAR;AACC,OAAK,UAAL;AACCA,YAAS,UAAT;AACA;AACD,OAAK,eAAL;AACCA,YAAS,eAAT;AACA;AANF;AAQA,QAAOE,YAAYF,MAAZ,CAAmBA,MAAnB,CAAP;AACA;;AAEM,SAASF,qBAAT,CAA+BC,KAA/B,EAAsCE,QAAtC,EAAgD;AACtD,QAAOJ,kBAAkBE,KAAlB,EAAyB,eAAzB,EAA0CE,QAA1C,CAAP;AACA","file":"formatPhoneNumber.js","sourcesContent":["import { parsePhoneNumberFromString } from 'libphonenumber-js/core'\n\n/**\n * Formats a phone number.\n * Is a proxy for `libphonenumber-js`'s `.format()` function of a parsed `PhoneNumber`.\n * @param  {string} value\n * @param  {string} [format]\n * @param  {object} metadata\n * @return {string}\n */\nexport default function formatPhoneNumber(value, format, metadata) {\n\tif (!metadata) {\n\t\tif (typeof format === 'object') {\n\t\t\tmetadata = format\n\t\t\tformat = 'NATIONAL'\n\t\t}\n\t}\n\tif (!value) {\n\t\treturn ''\n\t}\n\tconst phoneNumber = parsePhoneNumberFromString(value, metadata)\n\tif (!phoneNumber) {\n\t\treturn ''\n\t}\n\t// Deprecated.\n\t// Legacy `format`s.\n\tswitch (format) {\n\t\tcase 'National':\n\t\t\tformat = 'NATIONAL'\n\t\t\tbreak\n\t\tcase 'International':\n\t\t\tformat = 'INTERNATIONAL'\n\t\t\tbreak\n\t}\n\treturn phoneNumber.format(format)\n}\n\nexport function formatPhoneNumberIntl(value, metadata) {\n\treturn formatPhoneNumber(value, 'INTERNATIONAL', metadata)\n}"]}